{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/sujindar/react-native/notes-app/src/screens/Login.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nvar Login = function Login(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      uname = _useState2[0],\n      setUname = _useState2[1];\n\n  var login = function login() {\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(uname === '')) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('userName', uname));\n\n          case 4:\n            props.navigation.navigate(\"Home\");\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['rgba(255,78,0,0.8)', 'transparent'],\n    style: styles.background,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Welcome !\"), React.createElement(View, {\n    style: styles.Login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.Input,\n    placeholder: \"username\",\n    value: uname,\n    onChangeText: function onChangeText(val) {\n      return setUname(val);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: login,\n    style: {\n      marginHorizontal: 50,\n      marginTop: 20,\n      backgroundColor: 'black',\n      height: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      padding: 5,\n      textAlign: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Login\"))));\n};\n\nvar styles = StyleSheet.create({\n  header: {\n    fontSize: 30,\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  container: {\n    justifyContent: 'center',\n    flex: 1,\n    backgroundColor: \"orange\"\n  },\n  background: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    height: 300\n  },\n  Login: {\n    marginHorizontal: 30,\n    height: 200,\n    justifyContent: 'center',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 6,\n    backgroundColor: \"white\"\n  },\n  Input: {\n    marginHorizontal: 50,\n    borderWidth: 2,\n    borderColor: 'black',\n    padding: 6\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/home/sujindar/react-native/notes-app/src/screens/Login.js"],"names":["React","useState","AsyncStorage","LinearGradient","Login","props","uname","setUname","login","setItem","navigation","navigate","styles","container","background","header","Input","val","marginHorizontal","marginTop","backgroundColor","height","padding","textAlign","color","StyleSheet","create","fontSize","marginBottom","justifyContent","flex","position","left","right","top","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","borderWidth","borderColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAAQC,cAAR,QAA6B,sBAA7B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,kBAEKJ,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,MAEdK,KAFc;AAAA,MAEPC,QAFO;;AAIrB,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,kBACPF,KAAK,KAAG,EADD;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,6CAKJJ,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAgCH,KAAhC,CALI;;AAAA;AAMVD,YAAAA,KAAK,CAACK,UAAN,CAAiBC,QAAjB,CAA0B,MAA1B;;AANU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAQF,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AACA,IAAA,MAAM,EAAE,CAAC,oBAAD,EAAuB,aAAvB,CADR;AAEA,IAAA,KAAK,EAAED,MAAM,CAACE,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIH,MAAM,CAACR,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAIQ,MAAM,CAACI,KADpB;AAEI,IAAA,WAAW,EAAC,UAFhB;AAGI,IAAA,KAAK,EAAEV,KAHX;AAII,IAAA,YAAY,EAAE,sBAAAW,GAAG;AAAA,aAAIV,QAAQ,CAACU,GAAD,CAAZ;AAAA,KAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAET,KAA3B;AAAkC,IAAA,KAAK,EAAE;AAAEU,MAAAA,gBAAgB,EAAE,EAApB;AAAwBC,MAAAA,SAAS,EAAE,EAAnC;AAAuCC,MAAAA,eAAe,EAAE,OAAxD;AAAiEC,MAAAA,MAAM,EAAE;AAAzE,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,SAAS,EAAE,QAAxB;AAAkCC,MAAAA,KAAK,EAAE;AAAzC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAPJ,CANJ,CADF;AAoBD,CAhCD;;AAkCA,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC7BX,EAAAA,MAAM,EAAE;AACJY,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,YAAY,EAAE,EAFV;AAGJL,IAAAA,SAAS,EAAE;AAHP,GADqB;AAO7BV,EAAAA,SAAS,EAAE;AACPgB,IAAAA,cAAc,EAAE,QADT;AAEPC,IAAAA,IAAI,EAAC,CAFE;AAGPV,IAAAA,eAAe,EAAE;AAHV,GAPkB;AAY7BN,EAAAA,UAAU,EAAE;AACRiB,IAAAA,QAAQ,EAAE,UADF;AAERC,IAAAA,IAAI,EAAE,CAFE;AAGRC,IAAAA,KAAK,EAAE,CAHC;AAIRC,IAAAA,GAAG,EAAE,CAJG;AAKRb,IAAAA,MAAM,EAAE;AALA,GAZiB;AAmB7BjB,EAAAA,KAAK,EAAE;AACHc,IAAAA,gBAAgB,EAAE,EADf;AAEHG,IAAAA,MAAM,EAAE,GAFL;AAGHQ,IAAAA,cAAc,EAAE,QAHb;AAIHM,IAAAA,WAAW,EAAE,MAJV;AAKHC,IAAAA,YAAY,EAAE;AACVC,MAAAA,KAAK,EAAE,CADG;AAEVhB,MAAAA,MAAM,EAAE;AAFE,KALX;AASHiB,IAAAA,aAAa,EAAE,IATZ;AAUHC,IAAAA,YAAY,EAAE,IAVX;AAWHC,IAAAA,SAAS,EAAE,CAXR;AAYHpB,IAAAA,eAAe,EAAE;AAZd,GAnBsB;AAiC7BJ,EAAAA,KAAK,EAAE;AACHE,IAAAA,gBAAgB,EAAE,EADf;AAEHuB,IAAAA,WAAW,EAAE,CAFV;AAGHC,IAAAA,WAAW,EAAE,OAHV;AAIHpB,IAAAA,OAAO,EAAE;AAJN;AAjCsB,CAAlB,CAAf;AAyCA,eAAelB,KAAf","sourcesContent":["import React, {useState} from \"react\";\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity } from \"react-native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {LinearGradient} from 'expo-linear-gradient';\n\nconst Login = (props) => {\n\n    const [uname, setUname] = useState('');\n\n    const login = async () => {\n        if(uname==='')\n        {\n            return;\n        }\n        await AsyncStorage.setItem('userName',uname);\n        props.navigation.navigate(\"Home\");\n    }\n  return (\n    <View style={styles.container}>\n        <LinearGradient\n        colors={['rgba(255,78,0,0.8)', 'transparent']}\n        style={styles.background}\n        />\n        <Text style={styles.header}>Welcome !</Text>\n        <View style = {styles.Login}>\n            <TextInput\n                style = {styles.Input}\n                placeholder=\"username\"\n                value={uname}\n                onChangeText={val => setUname(val)}\n            />\n            <TouchableOpacity onPress={login} style={{ marginHorizontal: 50, marginTop: 20, backgroundColor: 'black', height: 30}}>\n                <Text style={{padding: 5, textAlign: 'center', color: 'white'}}>Login</Text>\n            </TouchableOpacity>\n        </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n    header: {\n        fontSize: 30,\n        marginBottom: 10,\n        textAlign: 'center',\n        \n    },\n    container: {\n        justifyContent: 'center',\n        flex:1,\n        backgroundColor: \"orange\"\n    },\n    background: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        height: 300\n    },\n    Login: {\n        marginHorizontal: 30,\n        height: 200,\n        justifyContent: 'center',\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 6,\n        backgroundColor: \"white\"\n    },\n    Input: {\n        marginHorizontal: 50,\n        borderWidth: 2,\n        borderColor: 'black',\n        padding: 6\n    }\n});\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}