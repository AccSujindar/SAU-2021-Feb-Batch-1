{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/sujindar/react-native/notes-app/src/screens/Notes/AddNotes.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nvar AddNotes = function AddNotes(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      uname = _useState2[0],\n      setUname = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Description = _useState6[0],\n      setDescription = _useState6[1];\n\n  useEffect(function () {\n    loadData();\n  });\n\n  var loadData = function loadData() {\n    return _regeneratorRuntime.async(function loadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = setUname;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userName\"));\n\n          case 3:\n            _context.t1 = _context.sent;\n            (0, _context.t0)(_context.t1);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addNote = function addNote() {\n    var myNotes, newNote;\n    return _regeneratorRuntime.async(function addNote$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.t0 = JSON;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(uname));\n\n          case 3:\n            _context2.t1 = _context2.sent;\n            myNotes = _context2.t0.parse.call(_context2.t0, _context2.t1);\n            newNote = {\n              title: title,\n              Description: Description\n            };\n\n            if (myNotes == null) {\n              myNotes = [];\n            }\n\n            myNotes.push(newNote);\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(uname, JSON.stringify(myNotes)));\n\n          case 10:\n            props.navigation.navigate('Home');\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['rgba(255,78,0,0.8)', 'transparent'],\n    style: styles.background,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      fontSize: 25,\n      marginVertical: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \" New Note \"), React.createElement(TextInput, {\n    style: styles.Input,\n    placeholder: \"Title\",\n    value: title,\n    onChangeText: function onChangeText(val) {\n      return setTitle(val);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.InputDescription,\n    placeholder: \"Description\",\n    multiline: true,\n    numberOfLines: 5,\n    value: Description,\n    onChangeText: function onChangeText(val) {\n      return setDescription(val);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: addNote,\n    style: styles.add,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      padding: 5,\n      textAlign: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Add\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"orange\"\n  },\n  background: {\n    flex: 1\n  },\n  Input: {\n    marginHorizontal: 50,\n    marginTop: 30,\n    borderWidth: 2,\n    borderColor: 'black',\n    padding: 6\n  },\n  InputDescription: {\n    marginHorizontal: 50,\n    marginTop: 30,\n    borderWidth: 2,\n    borderColor: 'black',\n    padding: 6,\n    minHeight: 80\n  },\n  add: {\n    marginTop: 30,\n    marginHorizontal: 50,\n    backgroundColor: 'black',\n    height: 30\n  }\n});\nexport default AddNotes;","map":{"version":3,"sources":["/home/sujindar/react-native/notes-app/src/screens/Notes/AddNotes.js"],"names":["React","useState","useEffect","AsyncStorage","LinearGradient","AddNotes","props","uname","setUname","title","setTitle","Description","setDescription","loadData","getItem","addNote","JSON","myNotes","parse","newNote","push","setItem","stringify","navigation","navigate","styles","container","background","textAlign","fontSize","marginVertical","Input","val","InputDescription","add","padding","color","StyleSheet","create","flex","backgroundColor","marginHorizontal","marginTop","borderWidth","borderColor","minHeight","height"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity } from \"react-native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {LinearGradient} from 'expo-linear-gradient';\nconst AddNotes = (props) => {\n\n    const [uname, setUname] = useState('');\n    const [title, setTitle] = useState('');\n    const [Description, setDescription] = useState('');\n\n    useEffect(() => {\n        loadData();\n    });\n\n    const loadData = async () => {\n        setUname(await AsyncStorage.getItem(\"userName\"));\n    }\n\n    const addNote = async ()=> {\n\n        let myNotes = JSON.parse(await AsyncStorage.getItem(uname));\n        const newNote = {\n            title,\n            Description\n        }\n        if(myNotes == null)\n        {\n            myNotes=[];\n        }\n        myNotes.push(newNote);\n        await AsyncStorage.setItem(uname, JSON.stringify(myNotes));\n        props.navigation.navigate('Home');\n    };\n\n\n    return (\n        <View style={styles.container}>\n            <LinearGradient\n                colors={['rgba(255,78,0,0.8)', 'transparent']}\n                style={styles.background}>\n\n            <Text style={{textAlign:'center', fontSize: 25,marginVertical: 30}}> New Note </Text>        \n\n            <TextInput\n                style = {styles.Input}\n                placeholder=\"Title\"\n                value={title}\n                onChangeText={val => setTitle(val)}\n            />\n\n            <TextInput\n                style = {styles.InputDescription}\n                placeholder=\"Description\"\n                multiline={true}\n\t            numberOfLines={5}\n                value={Description}\n                onChangeText={val => setDescription(val)}\n            />\n\n            <TouchableOpacity onPress={addNote} style={styles.add}>\n                <Text style={{padding: 5, textAlign: 'center', color: 'white'}}>Add</Text>\n            </TouchableOpacity>\n\n            </LinearGradient>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex:1,\n        backgroundColor: \"orange\"\n    },\n    background: {\n        flex: 1\n    },\n    Input: {\n        marginHorizontal: 50,\n        marginTop: 30,\n        borderWidth: 2,\n        borderColor: 'black',\n        padding: 6\n    },\n    InputDescription: {\n        marginHorizontal: 50,\n        marginTop: 30,\n        borderWidth: 2,\n        borderColor: 'black',\n        padding: 6,\n        minHeight: 80\n    },\n    add: { \n        marginTop: 30,\n        marginHorizontal: 50,\n        backgroundColor: 'black', \n        height: 30,\n    }\n\n});\n\nexport default AddNotes;"]},"metadata":{},"sourceType":"module"}